---
AWSTemplateFormatVersion: 2010-09-09


Parameters:
  Name:
    Type: String

  GitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  GitHubToken:
    Type: String
    NoEcho: true

  GitHubUser:
    Type: String

  Cluster:
    Type: String

  ProductionService:
    Type: String

  StagingService:
    Type: String
  
  StagingLink:
    Type: String

  StagingAPILink:
    Type: String
    Default: ""

  Repository:
    Type: String
  
  RunCypressTests:
    Type: String
    Default: "false"
  
  LighthouseCIServerURL:
    Type: String
    Default: ""

  LighthouseTestURLs:
    Type: String
    Default: ""

  LighthouseGitHubAppToken:
    Type: String
    NoEcho: true
    Default: ""

  LighthouseProjectToken:
    Type: String
    NoEcho: true
    Default: ""


Conditions:
  HasLighthouseTests: !Not [!Equals [ !Ref LighthouseTestURLs, "" ]]
  HasCypressTests: !Equals [ !Ref RunCypressTests, "true" ]

Resources:
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
              - Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/cloudbuild/*
                Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}
      Name: !Sub ${AWS::StackName}-${Name}
      ServiceRole: !Ref CodeBuildServiceRole
  
  GitHubTokenSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: The GitHub token secret
      Name: /cloudbuild/GITHUB_TOKEN
      SecretString: !Sub '{"token":"${GitHubToken}"}'
  
  LHCITokenSecret:
    Type: AWS::SecretsManager::Secret
    Condition: HasLighthouseTests
    Properties:
      Description: The Lighthouse CI Server secret for the project
      Name: /cloudbuild/LHCI_TOKEN
      SecretString: !Sub '{"token":"${LighthouseProjectToken}"}'

  LHCIGitHubAppTokenSecret:
    Type: AWS::SecretsManager::Secret
    Condition: HasLighthouseTests
    Properties:
      Description: The GitHub App Token used by the Lighthouse CI Server
      Name: /cloudbuild/LHCI_GITHUB_APP_TOKEN
      SecretString: !Sub '{"token":"${LighthouseGitHubAppToken}"}'
  
  CodeBuildLighthouseProject:
    Type: AWS::CodeBuild::Project
    Condition: HasLighthouseTests
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: lighthouse/buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: LIGHTHOUSE_TEST_URLS
            Value: !Ref LighthouseTestURLs
          - Name: LHCI_SERVER_BASE_URL
            Value: !Ref LighthouseCIServerURL
          - Name: LHCI_GITHUB_APP_TOKEN
            Type: SECRETS_MANAGER
            Value: !Sub ${LHCIGitHubAppTokenSecret}:token
          - Name: LHCI_TOKEN
            Type: SECRETS_MANAGER
            Value: !Sub ${LHCITokenSecret}:token
          - Name: GITHUB_TOKEN
            Type: SECRETS_MANAGER
            Value: !Sub ${GitHubTokenSecret}:token
          - Name: GITHUB_REPO
            Value: !Ref GitHubRepo
          - Name: GITHUB_BRANCH
            Value: !Ref GitHubBranch
          - Name: GITHUB_USER
            Value: !Ref GitHubUser
      Name: !Sub ${AWS::StackName}-${Name}-Lighthouse
      ServiceRole: !Ref CodeBuildServiceRole

  CodeBuildCypressProject:
    Type: AWS::CodeBuild::Project
    Condition: HasCypressTests
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: cypress/buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: GITHUB_TOKEN
            Type: SECRETS_MANAGER
            Value: !Sub ${GitHubTokenSecret}:token
          - Name: GITHUB_REPO
            Value: !Ref GitHubRepo
          - Name: GITHUB_BRANCH
            Value: !Ref GitHubBranch
          - Name: GITHUB_USER
            Value: !Ref GitHubUser
          - Name: API_BASE_URI
            Value: !Ref StagingAPILink
      Name: !Sub ${AWS::StackName}-${Name}-Cypress
      ServiceRole: !Ref CodeBuildServiceRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}-${Name}
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Staging
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Ref Cluster
                ServiceName: !Ref StagingService
                FileName: images.json
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
            - Fn::If:
              - HasLighthouseTests
              - Name: Lighthouse
                ActionTypeId:
                  Category: Test
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref CodeBuildLighthouseProject
                InputArtifacts:
                  - Name: App
                RunOrder: 2
              - Ref: AWS::NoValue
            - Fn::If:
              - HasCypressTests
              - Name: Cypress
                ActionTypeId:
                  Category: Test
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref CodeBuildCypressProject
                InputArtifacts:
                  - Name: App
                RunOrder: 2
              - Ref: AWS::NoValue
        - Name: Production
          Actions:
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                ExternalEntityLink: !Ref StagingLink
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Ref Cluster
                ServiceName: !Ref ProductionService
                FileName: images.json
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 2


Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
